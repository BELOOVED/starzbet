/**
 * ⚠️ GENERATED CODE - DO NOT MODIFY BY HAND
 *
 * 🔨️ GENERATED BY kotlin/tools/code-generator-common/src/main/kotlin/com/sumstats/codegenerator/common/sdk/typescript/SDKTypescriptGenerator.kt
 */
import type { IApplyAutoCashOutRulesCommand } from "../sportsbook/autocashout/api/command/ApplyAutoCashOutRulesCommand"
import type { IApplyAutoCashResult } from "../sportsbook/autocashout/api/command/ApplyAutoCashResult"
import type { IAutoCashOutForBetHistoryDto } from "../sportsbook/autocashout/api/command/AutoCashOutForBetHistoryDto"
import type { IAutoCashOutRestrictionDto } from "../sportsbook/autocashout/api/dto/AutoCashOutRestrictionDto"
import type { IAutoCashOutRuleDto } from "../sportsbook/autocashout/api/dto/AutoCashOutRuleDto"
import type { IBetInfoDto } from "../sportsbook/autocashout/api/dto/BetInfoDto"
import type { ICreateAutoCashOutRuleCommand } from "../sportsbook/autocashout/api/command/CreateAutoCashOutRuleCommand"
import type { IFindAllAutoCashOutRestrictionsCommand } from "../sportsbook/autocashout/api/command/FindAllAutoCashOutRestrictionsCommand"
import type { IFindAllAutoCashOutRulesCommand } from "../sportsbook/autocashout/api/command/FindAllAutoCashOutRulesCommand"
import type { IFindAutoCashOutRestrictionsCommand } from "../sportsbook/autocashout/api/command/FindAutoCashOutRestrictionsCommand"
import type { IFindAutoCashOutRulesByBetIdsCommand } from "../sportsbook/autocashout/api/command/FindAutoCashOutRulesByBetIdsCommand"
import type { IGetBetInfoByBetIdQuery } from "../sportsbook/autocashout/api/query/GetBetInfoByBetIdQuery"
import type { IRecomputeAutoCashOutRulesCommand } from "../sportsbook/autocashout/api/command/RecomputeAutoCashOutRulesCommand"
import type { IRemoveAutoCashOutRuleCommand } from "../sportsbook/autocashout/api/command/RemoveAutoCashOutRuleCommand"
import type { IUpdateAutoCashOutRestrictionCommand } from "../sportsbook/autocashout/api/command/UpdateAutoCashOutRestrictionCommand"
import { IRpcClient } from "@sb/network-bus/RpcClient";
import { IMetadata } from "@sb/network-bus/Model";
import { ISetting } from "@sb/network-bus/Model";
import { emptySettings } from "@sb/network-bus/Model";
import { autocashout_location } from "./ProxyLocations";
import { placebet_location } from "./ProxyLocations";
import { sportsbookread_location } from "./ProxyLocations";

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_FindAllAutoCashOutRestrictionsCommand = (client: IRpcClient, payload: IFindAllAutoCashOutRestrictionsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFindAllAutoCashOutRestrictionsCommand, IAutoCashOutRestrictionDto[]>(payload, `sumstats.autocashout.find_all_auto_cash_out_restrictions`, `${autocashout_location}/sumstats.autocashout.find_all_auto_cash_out_restrictions`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_FindAllAutoCashOutRulesCommand = (client: IRpcClient, payload: IFindAllAutoCashOutRulesCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFindAllAutoCashOutRulesCommand, IAutoCashOutRuleDto[]>(payload, `sumstats.autocashout.find_all_auto_cash_out_rules`, `${autocashout_location}/sumstats.autocashout.find_all_auto_cash_out_rules`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_FindAutoCashOutRestrictionsCommand = (client: IRpcClient, payload: IFindAutoCashOutRestrictionsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFindAutoCashOutRestrictionsCommand, IAutoCashOutRestrictionDto[]>(payload, `sumstats.autocashout.find_auto_cash_out_restrictions`, `${autocashout_location}/sumstats.autocashout.find_auto_cash_out_restrictions`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_UpdateAutoCashOutRestrictionCommand = (client: IRpcClient, payload: IUpdateAutoCashOutRestrictionCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IUpdateAutoCashOutRestrictionCommand, null>(payload, `sumstats.autocashout.update_auto_cash_out_restrictions`, `${autocashout_location}/sumstats.autocashout.update_auto_cash_out_restrictions`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_CreateAutoCashOutRuleCommand = (client: IRpcClient, payload: ICreateAutoCashOutRuleCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICreateAutoCashOutRuleCommand, null>(payload, `sumstats.sportsbook.auto_cash_out.command.create_auto_cash_out_rule`, `${autocashout_location}/sumstats.sportsbook.auto_cash_out.command.create_auto_cash_out_rule`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_RemoveAutoCashOutRuleCommand = (client: IRpcClient, payload: IRemoveAutoCashOutRuleCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IRemoveAutoCashOutRuleCommand, null>(payload, `sumstats.sportsbook.auto_cash_out.command.remove_auto_cash_out_rule`, `${autocashout_location}/sumstats.sportsbook.auto_cash_out.command.remove_auto_cash_out_rule`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_ApplyAutoCashOutRulesCommand = (client: IRpcClient, payload: IApplyAutoCashOutRulesCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IApplyAutoCashOutRulesCommand, IApplyAutoCashResult>(payload, `sumstats.sportsbook.auto_cash_out.command.apply_auto_cash_out_rules`, `${placebet_location}/sumstats.sportsbook.auto_cash_out.command.apply_auto_cash_out_rules`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_FindAutoCashOutRulesByBetIdsCommand = (client: IRpcClient, payload: IFindAutoCashOutRulesByBetIdsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFindAutoCashOutRulesByBetIdsCommand, { [key: string]: IAutoCashOutForBetHistoryDto }>(payload, `sumstats.autocashout.command.find_all_rules_by_bet_ids`, `${autocashout_location}/sumstats.autocashout.command.find_all_rules_by_bet_ids`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_GetBetInfoByBetIdQuery = (client: IRpcClient, payload: IGetBetInfoByBetIdQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetBetInfoByBetIdQuery, IBetInfoDto>(payload, `sumstats.sportsbookread.query.bet_info_by_bet_id`, `${sportsbookread_location}/sumstats.sportsbookread.query.bet_info_by_bet_id`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_RecomputeAutoCashOutRulesCommand = (client: IRpcClient, payload: IRecomputeAutoCashOutRulesCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IRecomputeAutoCashOutRulesCommand, null>(payload, `sumstats.autocashout.command.recompute_auto_cash_out_rules`, `${autocashout_location}/sumstats.autocashout.command.recompute_auto_cash_out_rules`, metadata, settings);
