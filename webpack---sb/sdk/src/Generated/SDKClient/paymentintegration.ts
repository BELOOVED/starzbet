/**
 * ‚ö†Ô∏è GENERATED CODE - DO NOT MODIFY BY HAND
 *
 * üî®Ô∏è GENERATED BY kotlin/tools/code-generator-common/src/main/kotlin/com/sumstats/codegenerator/common/sdk/typescript/SDKTypescriptGenerator.kt
 */
import type { IAnSpacePayMakeDepositCommand } from "../platform/paymentintegration/paymentapi/anspacepay/command/deposit/AnSpacePayMakeDepositCommand"
import type { IAnSpacePayMakeWithdrawalCommand } from "../platform/paymentintegration/paymentapi/anspacepay/command/withdrawal/AnSpacePayMakeWithdrawalCommand"
import type { IAnSpacePayPaymentPixQrCode } from "../platform/paymentintegration/paymentapi/anspacepay/dto/qrcode/AnSpacePayPaymentPixQrCode"
import type { IAstroPayDevCallbackCommand } from "../platform/paymentintegration/payment/astropay/command/dev/AstroPayDevCallbackCommand"
import type { IAstroPayFindAccountsQuery } from "../platform/paymentintegration/payment/astropay/query/AstroPayFindAccountsQuery"
import type { IAstroPayForceCheckDepositStatusCommand } from "../platform/paymentintegration/payment/astropay/command/deposit/AstroPayForceCheckDepositStatusCommand"
import type { IAstroPayForceCheckWithdrawalStatusCommand } from "../platform/paymentintegration/payment/astropay/command/withdrawal/AstroPayForceCheckWithdrawalStatusCommand"
import type { IAstroPayMakeDepositCommand } from "../platform/paymentintegration/payment/astropay/command/deposit/AstroPayMakeDepositCommand"
import type { IAstroPayMakeDepositResponse } from "../platform/paymentintegration/payment/astropay/command/deposit/AstroPayMakeDepositResponse"
import type { IAstroPayMakeWithdrawalCommand } from "../platform/paymentintegration/payment/astropay/command/withdrawal/AstroPayMakeWithdrawalCommand"
import type { IAstroPayMakeWithdrawalResponse } from "../platform/paymentintegration/payment/astropay/command/withdrawal/AstroPayMakeWithdrawalResponse"
import type { IExxogateBank } from "../platform/paymentintegration/paymentapi/exxogate/dto/bank/ExxogateBank"
import type { IExxogateGetBanksQuery } from "../platform/paymentintegration/paymentapi/exxogate/query/ExxogateGetBanksQuery"
import type { IExxogateMakeBankWithdrawalCommand } from "../platform/paymentintegration/paymentapi/exxogate/command/withdrawal/ExxogateMakeBankWithdrawalCommand"
import type { IExxogateMakeImpsWithdrawalCommand } from "../platform/paymentintegration/paymentapi/exxogate/command/withdrawal/ExxogateMakeImpsWithdrawalCommand"
import type { IExxogateMakeTestDepositCommand } from "../platform/paymentintegration/paymentapi/exxogate/command/deposit/ExxogateMakeTestDepositCommand"
import type { IExxogateMakeTestWithdrawalCommand } from "../platform/paymentintegration/paymentapi/exxogate/command/withdrawal/ExxogateMakeTestWithdrawalCommand"
import type { IExxogateMakeUpiDepositCommand } from "../platform/paymentintegration/paymentapi/exxogate/command/deposit/ExxogateMakeUpiDepositCommand"
import type { IFixFinBank } from "../platform/paymentintegration/paymentapi/fixfin/dto/FixFinBank"
import type { IFixFinBanksysBankAccountDetailsDto } from "../platform/paymentintegration/payment/fixfin/dto/FixFinBanksysBankAccountDetailsDto"
import type { IFixFinBanksysConfirmDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinBanksysConfirmDepositCommand"
import type { IFixFinBanksysSelectBankCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinBanksysSelectBankCommand"
import type { IFixFinFastlineAtmQrMakeFiatDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinFastlineAtmQrMakeFiatDepositCommand"
import type { IFixFinFastlineBanksCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinFastlineBanksCommand"
import type { IFixFinFastlineMakeFiatDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinFastlineMakeFiatDepositCommand"
import type { IFixFinFindBanksysBankAccountDetailsQuery } from "../platform/paymentintegration/payment/fixfin/query/FixFinFindBanksysBankAccountDetailsQuery"
import type { IFixFinFindTrHavaleEftGetBankAccountInfoQuery } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinFindTrHavaleEftGetBankAccountInfoQuery"
import type { IFixFinGetKolayPayBanksCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinGetKolayPayBanksCommand"
import type { IFixFinGetSistemnakitBanksQuery } from "../platform/paymentintegration/payment/fixfin/query/FixFinGetSistemnakitBanksQuery"
import type { IFixFinGetVevoHavaleBanksQuery } from "../platform/paymentintegration/payment/fixfin/query/FixFinGetVevoHavaleBanksQuery"
import type { IFixFinKolayPayHavaleDepositMethodSelectedCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinKolayPayHavaleDepositMethodSelectedCommand"
import type { IFixFinMakeCryptoDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinMakeCryptoDepositCommand"
import type { IFixFinMakeCryptoWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeCryptoWithdrawalCommand"
import type { IFixFinMakeFiatDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinMakeFiatDepositCommand"
import type { IFixFinMakeFiatDepositResponse } from "../platform/paymentintegration/payment/fixfin/dto/FixFinMakeFiatDepositResponse"
import type { IFixFinMakeFiatWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeFiatWithdrawalCommand"
import type { IFixFinMakeFin2WithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeFin2WithdrawalCommand"
import type { IFixFinMakeFinpayHavaleWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeFinpayHavaleWithdrawalCommand"
import type { IFixFinMakeKolayPayHavaleWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeKolayPayHavaleWithdrawalCommand"
import type { IFixFinMakePayfutureWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakePayfutureWithdrawalCommand"
import type { IFixFinMakeSeripay1WithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeSeripay1WithdrawalCommand"
import type { IFixFinMakeSistemnakitHavaleWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeSistemnakitHavaleWithdrawalCommand"
import type { IFixFinMakeTrHavaleEftWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeTrHavaleEftWithdrawalCommand"
import type { IFixFinMakeTurkpayWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeTurkpayWithdrawalCommand"
import type { IFixFinMakeUltrapayWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeUltrapayWithdrawalCommand"
import type { IFixFinMakeVegapayHavaleWithdrawalCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinMakeVegapayHavaleWithdrawalCommand"
import type { IFixFinPayfutureMakeFiatDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinPayfutureMakeFiatDepositCommand"
import type { IFixFinSistemnakitCreditCardMakeFiatDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinSistemnakitCreditCardMakeFiatDepositCommand"
import type { IFixFinSistemnakitHavaleMakeFiatDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinSistemnakitHavaleMakeFiatDepositCommand"
import type { IFixFinTrHavaleEftBankAccountInfoDto } from "../platform/paymentintegration/payment/fixfin/dto/FixFinTrHavaleEftBankAccountInfoDto"
import type { IFixFinTrHavaleEftDepositConfirmedByUserCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinTrHavaleEftDepositConfirmedByUserCommand"
import type { IFixFinTrHavaleEftDepositMethodSelectedCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinTrHavaleEftDepositMethodSelectedCommand"
import type { IFixFinTurkpayMakeFiatDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinTurkpayMakeFiatDepositCommand"
import type { IFixFinUltrapayBanksCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinUltrapayBanksCommand"
import type { IFixFinVegapayHavaleBanksCommand } from "../platform/paymentintegration/payment/fixfin/command/withdrawal/FixFinVegapayHavaleBanksCommand"
import type { IFixFinVegapayHavaleDepositMethodSelectedCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinVegapayHavaleDepositMethodSelectedCommand"
import type { IFixFinVevoHavaleMakeFiatDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinVevoHavaleMakeFiatDepositCommand"
import type { IFixFinVevoParazulaMakeFiatDepositCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinVevoParazulaMakeFiatDepositCommand"
import type { IFixFinVevoParazulaSmsPhaseCommand } from "../platform/paymentintegration/payment/fixfin/command/deposit/FixFinVevoParazulaSmsPhaseCommand"
import type { IGetAllKolayPayDepositBankAccountsQuery } from "../platform/paymentintegration/paymentapi/kolaypay/query/GetAllKolayPayDepositBankAccountsQuery"
import type { IGetMuchBetterPhoneNumberQuery } from "../platform/paymentintegration/payment/muchbetter/command/GetMuchBetterPhoneNumberQuery"
import type { IInternalAstroPayUserAccount } from "../platform/paymentintegration/payment/astropay/dto/InternalAstroPayUserAccount"
import type { IKolayPayBankAccountDto } from "../platform/paymentintegration/paymentapi/kolaypay/dto/graphql/KolayPayBankAccountDto"
import type { IKolayPayMakeHavaleDepositCommand } from "../platform/paymentintegration/paymentapi/kolaypay/command/KolayPayMakeHavaleDepositCommand"
import type { IKolayPayMakeHavaleWithdrawalCommand } from "../platform/paymentintegration/paymentapi/kolaypay/command/KolayPayMakeHavaleWithdrawalCommand"
import type { IKolayPayMakePaparaDepositCommand } from "../platform/paymentintegration/paymentapi/kolaypay/command/KolayPayMakePaparaDepositCommand"
import type { IKolayPaySyncBankLogosCommand } from "../platform/paymentintegration/paymentapi/kolaypay/command/KolayPaySyncBankLogosCommand"
import type { ILuxonPayMakeDepositCommand } from "../platform/paymentintegration/paymentapi/luxonpay/command/deposit/LuxonPayMakeDepositCommand"
import type { ILuxonPayMakeWithdrawalCommand } from "../platform/paymentintegration/paymentapi/luxonpay/command/withdrawal/LuxonPayMakeWithdrawalCommand"
import type { IMuchBetterCallDevCallbackCommand } from "../platform/paymentintegration/payment/muchbetter/command/MuchBetterCallDevCallbackCommand"
import type { IMuchBetterFindLastUsedPhoneNumberQuery } from "../platform/paymentintegration/payment/muchbetter/query/MuchBetterFindLastUsedPhoneNumberQuery"
import type { IMuchBetterForceCheckStatusCommand } from "../platform/paymentintegration/payment/muchbetter/command/MuchBetterForceCheckStatusCommand"
import type { IMuchBetterMakeDepositCommand } from "../platform/paymentintegration/payment/muchbetter/command/deposit/MuchBetterMakeDepositCommand"
import type { IMuchBetterMakeWithdrawalCommand } from "../platform/paymentintegration/payment/muchbetter/command/withdrawal/MuchBetterMakeWithdrawalCommand"
import type { IMuchBetterTrackingCodeQuery } from "../platform/paymentintegration/payment/muchbetter/command/MuchBetterTrackingCodeQuery"
import type { IOneMakeWithdrawalCommand } from "../platform/paymentintegration/paymentapi/one/command/withdraw/OneMakeWithdrawalCommand"
import type { IOptions } from "../platform/paymentintegration/payment/fixfin/service/adapter/FixFinMessage/Response/CryptoDeposit/Data/Options"
import type { IPayPortGetAvailablePaymentMethodsQuery } from "../platform/paymentintegration/paymentapi/payport/query/PayPortGetAvailablePaymentMethodsQuery"
import type { IPayPortMakeDepositCommand } from "../platform/paymentintegration/paymentapi/payport/command/deposit/PayPortMakeDepositCommand"
import type { IPayPortMakeWithdrawalCommand } from "../platform/paymentintegration/paymentapi/payport/command/withdraw/PayPortMakeWithdrawalCommand"
import type { IPayPortPaymentMethod } from "../platform/paymentintegration/paymentapi/payport/dto/paymentmethod/PayPortPaymentMethod"
import type { IPayRetailersForcePayoutNotificationsCommand } from "../platform/paymentintegration/paymentapi/payretailers/command/notification/PayRetailersForcePayoutNotificationsCommand"
import type { IPayRetailersForceTransactionNotificationsCommand } from "../platform/paymentintegration/paymentapi/payretailers/command/notification/PayRetailersForceTransactionNotificationsCommand"
import type { IPayRetailersMakeDepositCommand } from "../platform/paymentintegration/paymentapi/payretailers/command/deposit/PayRetailersMakeDepositCommand"
import type { IPayRetailersMakeWithdrawalCommand } from "../platform/paymentintegration/paymentapi/payretailers/command/withdrawal/PayRetailersMakeWithdrawalCommand"
import type { IPaycentMakeFiatDepositCommand } from "../platform/paymentintegration/paymentapi/paycent/command/deposit/PaycentMakeFiatDepositCommand"
import type { IPaymentClipCheckoutPage } from "../platform/paymentintegration/paymentapi/paymentclip/dto/checkout/PaymentClipCheckoutPage"
import type { IPaymentClipMakeDepositCommand } from "../platform/paymentintegration/paymentapi/paymentclip/command/deposit/PaymentClipMakeDepositCommand"
import type { IPaymentClipMakeWithdrawalCommand } from "../platform/paymentintegration/paymentapi/paymentclip/command/withdrawal/PaymentClipMakeWithdrawalCommand"
import type { ISkrillCheckScheduledTransfersCommand } from "../platform/paymentintegration/paymentapi/skrill/command/transfer/SkrillCheckScheduledTransfersCommand"
import type { ISkrillMakeDepositCommand } from "../platform/paymentintegration/paymentapi/skrill/command/deposit/SkrillMakeDepositCommand"
import type { ISkrillMakeWithdrawalCommand } from "../platform/paymentintegration/paymentapi/skrill/command/withdrawal/SkrillMakeWithdrawalCommand"
import type { ISqalaMakeQrCodeDepositCommand } from "../platform/paymentintegration/paymentapi/sqala/command/deposit/SqalaMakeQrCodeDepositCommand"
import type { ISqalaMakeWithdrawalCommand } from "../platform/paymentintegration/paymentapi/sqala/command/withdraw/SqalaMakeWithdrawalCommand"
import type { IVpagMakeDepositCommand } from "../platform/paymentintegration/paymentapi/vpag/command/deposit/VpagMakeDepositCommand"
import type { IVpagMakeWithdrawalCommand } from "../platform/paymentintegration/paymentapi/vpag/command/withdrawal/VpagMakeWithdrawalCommand"
import type { TMuchBetterDepositStatus } from "../platform/paymentintegration/paymentapi/muchbetter/dto/MuchBetterDepositStatus"
import { IRpcClient } from "@sb/network-bus/RpcClient";
import { IMetadata } from "@sb/network-bus/Model";
import { ISetting } from "@sb/network-bus/Model";
import { emptySettings } from "@sb/network-bus/Model";
import { payment_location } from "./ProxyLocations";

/**
 * The message requires one of the following roles: ANON_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_AstroPayDevCallbackCommand = (client: IRpcClient, payload: IAstroPayDevCallbackCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAstroPayDevCallbackCommand, null>(payload, `sumstats.platform.payment.astropay.command.dev_callback`, `${payment_location}/sumstats.platform.payment.astropay.command.dev_callback`, metadata, settings);

/**
 * The message requires one of the following roles: ANON_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_MuchBetterCallDevCallbackCommand = (client: IRpcClient, payload: IMuchBetterCallDevCallbackCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IMuchBetterCallDevCallbackCommand, null>(payload, `sumstats.platform.payment.muchbetter.command.call_dev_callback`, `${payment_location}/sumstats.platform.payment.muchbetter.command.call_dev_callback`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE, SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_AstroPayForceCheckDepositStatusCommand = (client: IRpcClient, payload: IAstroPayForceCheckDepositStatusCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAstroPayForceCheckDepositStatusCommand, null>(payload, `sumstats.platform.payment.astropay.command.force_check_deposit_status`, `${payment_location}/sumstats.platform.payment.astropay.command.force_check_deposit_status`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE, SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_AstroPayForceCheckWithdrawalStatusCommand = (client: IRpcClient, payload: IAstroPayForceCheckWithdrawalStatusCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAstroPayForceCheckWithdrawalStatusCommand, null>(payload, `sumstats.platform.payment.astropay.command.force_check_withdrawal_status`, `${payment_location}/sumstats.platform.payment.astropay.command.force_check_withdrawal_status`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE, SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_KolayPaySyncBankLogosCommand = (client: IRpcClient, payload: IKolayPaySyncBankLogosCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IKolayPaySyncBankLogosCommand, null>(payload, `sumstats.platform.payment.kolaypay.command.sync_bank_logos`, `${payment_location}/sumstats.platform.payment.kolaypay.command.sync_bank_logos`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE, SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_MuchBetterForceCheckStatusCommand = (client: IRpcClient, payload: IMuchBetterForceCheckStatusCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IMuchBetterForceCheckStatusCommand, null>(payload, `sumstats.platform.payment.muchbetter.command.force_check_status`, `${payment_location}/sumstats.platform.payment.muchbetter.command.force_check_status`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_AnSpacePayMakeDepositCommand = (client: IRpcClient, payload: IAnSpacePayMakeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAnSpacePayMakeDepositCommand, IAnSpacePayPaymentPixQrCode>(payload, `sumstats.platform.payment.anspacepay.command.make_deposit`, `${payment_location}/sumstats.platform.payment.anspacepay.command.make_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_AnSpacePayMakeWithdrawalCommand = (client: IRpcClient, payload: IAnSpacePayMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAnSpacePayMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.anspacepay.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.anspacepay.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_AstroPayFindAccountsQuery = (client: IRpcClient, payload: IAstroPayFindAccountsQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAstroPayFindAccountsQuery, IInternalAstroPayUserAccount[]>(payload, `sumstats.platform.payment.astropay.query.find_accounts`, `${payment_location}/sumstats.platform.payment.astropay.query.find_accounts`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_AstroPayMakeDepositCommand = (client: IRpcClient, payload: IAstroPayMakeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAstroPayMakeDepositCommand, IAstroPayMakeDepositResponse>(payload, `sumstats.platform.payment.astropay.command.make_deposit`, `${payment_location}/sumstats.platform.payment.astropay.command.make_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_AstroPayMakeWithdrawalCommand = (client: IRpcClient, payload: IAstroPayMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAstroPayMakeWithdrawalCommand, IAstroPayMakeWithdrawalResponse>(payload, `sumstats.platform.payment.astropay.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.astropay.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_ExxogateGetBanksQuery = (client: IRpcClient, payload: IExxogateGetBanksQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IExxogateGetBanksQuery, IExxogateBank[]>(payload, `sumstats.platform.payment.exxogate.query.get_banks`, `${payment_location}/sumstats.platform.payment.exxogate.query.get_banks`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_ExxogateMakeBankWithdrawalCommand = (client: IRpcClient, payload: IExxogateMakeBankWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IExxogateMakeBankWithdrawalCommand, null>(payload, `sumstats.platform.payment.exxogate.command.make_bank_withdrawal`, `${payment_location}/sumstats.platform.payment.exxogate.command.make_bank_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_ExxogateMakeImpsWithdrawalCommand = (client: IRpcClient, payload: IExxogateMakeImpsWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IExxogateMakeImpsWithdrawalCommand, null>(payload, `sumstats.platform.payment.exxogate.command.make_imps_withdrawal`, `${payment_location}/sumstats.platform.payment.exxogate.command.make_imps_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_ExxogateMakeTestDepositCommand = (client: IRpcClient, payload: IExxogateMakeTestDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IExxogateMakeTestDepositCommand, string>(payload, `sumstats.platform.payment.exxogate.command.make_test_deposit`, `${payment_location}/sumstats.platform.payment.exxogate.command.make_test_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_ExxogateMakeTestWithdrawalCommand = (client: IRpcClient, payload: IExxogateMakeTestWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IExxogateMakeTestWithdrawalCommand, null>(payload, `sumstats.platform.payment.exxogate.command.make_test_withdrawal`, `${payment_location}/sumstats.platform.payment.exxogate.command.make_test_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_ExxogateMakeUpiDepositCommand = (client: IRpcClient, payload: IExxogateMakeUpiDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IExxogateMakeUpiDepositCommand, string>(payload, `sumstats.platform.payment.exxogate.command.make_upi_deposit`, `${payment_location}/sumstats.platform.payment.exxogate.command.make_upi_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinBanksysConfirmDepositCommand = (client: IRpcClient, payload: IFixFinBanksysConfirmDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinBanksysConfirmDepositCommand, null>(payload, `sumstats.platform.payment.fixfin.command.banksys_confirm_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.banksys_confirm_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinBanksysSelectBankCommand = (client: IRpcClient, payload: IFixFinBanksysSelectBankCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinBanksysSelectBankCommand, null>(payload, `sumstats.platform.payment.fixfin.command.banksys_select_bank`, `${payment_location}/sumstats.platform.payment.fixfin.command.banksys_select_bank`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinFastlineAtmQrMakeFiatDepositCommand = (client: IRpcClient, payload: IFixFinFastlineAtmQrMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinFastlineAtmQrMakeFiatDepositCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.fastline_atm_qr_make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.fastline_atm_qr_make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinFastlineBanksCommand = (client: IRpcClient, payload: IFixFinFastlineBanksCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinFastlineBanksCommand, IFixFinBank[]>(payload, `sumstats.platform.payment.fixfin.command.fastline_banks`, `${payment_location}/sumstats.platform.payment.fixfin.command.fastline_banks`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinFastlineMakeFiatDepositCommand = (client: IRpcClient, payload: IFixFinFastlineMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinFastlineMakeFiatDepositCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.fastline_make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.fastline_make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinFindBanksysBankAccountDetailsQuery = (client: IRpcClient, payload: IFixFinFindBanksysBankAccountDetailsQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinFindBanksysBankAccountDetailsQuery, IFixFinBanksysBankAccountDetailsDto | null | undefined>(payload, `sumstats.platform.payment.fixfin.query.find_banksys_bank_account_details`, `${payment_location}/sumstats.platform.payment.fixfin.query.find_banksys_bank_account_details`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinFindTrHavaleEftGetBankAccountInfoQuery = (client: IRpcClient, payload: IFixFinFindTrHavaleEftGetBankAccountInfoQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinFindTrHavaleEftGetBankAccountInfoQuery, IFixFinTrHavaleEftBankAccountInfoDto | null | undefined>(payload, `sumstats.platform.payment.fixfin.query.find_tr_havale_eft_get_bank_account_info_query`, `${payment_location}/sumstats.platform.payment.fixfin.query.find_tr_havale_eft_get_bank_account_info_query`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinGetKolayPayBanksCommand = (client: IRpcClient, payload: IFixFinGetKolayPayBanksCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinGetKolayPayBanksCommand, IFixFinBank[]>(payload, `sumstats.platform.payment.fixfin.command.kolay_pay_banks`, `${payment_location}/sumstats.platform.payment.fixfin.command.kolay_pay_banks`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinGetSistemnakitBanksQuery = (client: IRpcClient, payload: IFixFinGetSistemnakitBanksQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinGetSistemnakitBanksQuery, IFixFinBank[]>(payload, `sumstats.platform.payment.fixfin.command.get_sistemnakit_banks`, `${payment_location}/sumstats.platform.payment.fixfin.command.get_sistemnakit_banks`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinGetVevoHavaleBanksQuery = (client: IRpcClient, payload: IFixFinGetVevoHavaleBanksQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinGetVevoHavaleBanksQuery, IFixFinBank[]>(payload, `sumstats.platform.payment.fixfin.command.get_vevo_havale_banks`, `${payment_location}/sumstats.platform.payment.fixfin.command.get_vevo_havale_banks`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinKolayPayHavaleDepositMethodSelectedCommand = (client: IRpcClient, payload: IFixFinKolayPayHavaleDepositMethodSelectedCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinKolayPayHavaleDepositMethodSelectedCommand, null>(payload, `sumstats.platform.payment.fixfin.command.kolaypay_havale_deposit_method_selected`, `${payment_location}/sumstats.platform.payment.fixfin.command.kolaypay_havale_deposit_method_selected`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeCryptoDepositCommand = (client: IRpcClient, payload: IFixFinMakeCryptoDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeCryptoDepositCommand, IOptions>(payload, `sumstats.platform.payment.fixfin.command.make_crypto_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_crypto_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeCryptoWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeCryptoWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeCryptoWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_crypto_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_crypto_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeFiatDepositCommand = (client: IRpcClient, payload: IFixFinMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeFiatDepositCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeFiatWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeFiatWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeFiatWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_fiat_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_fiat_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeFin2WithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeFin2WithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeFin2WithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_fin2_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_fin2_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeFinpayHavaleWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeFinpayHavaleWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeFinpayHavaleWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_finpay_havale_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_finpay_havale_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeKolayPayHavaleWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeKolayPayHavaleWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeKolayPayHavaleWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_kolaypay_havale_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_kolaypay_havale_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakePayfutureWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakePayfutureWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakePayfutureWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_payfuture_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_payfuture_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeSeripay1WithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeSeripay1WithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeSeripay1WithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_seripay1_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_seripay1_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeSistemnakitHavaleWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeSistemnakitHavaleWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeSistemnakitHavaleWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_sistemnakit_havale_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_sistemnakit_havale_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeTrHavaleEftWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeTrHavaleEftWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeTrHavaleEftWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_tr_havale_eft_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_tr_havale_eft_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeTurkpayWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeTurkpayWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeTurkpayWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_turkpay_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_turkpay_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeUltrapayWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeUltrapayWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeUltrapayWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_ultrapay_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_ultrapay_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinMakeVegapayHavaleWithdrawalCommand = (client: IRpcClient, payload: IFixFinMakeVegapayHavaleWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinMakeVegapayHavaleWithdrawalCommand, string>(payload, `sumstats.platform.payment.fixfin.command.make_vegapay_havale_withdrawal`, `${payment_location}/sumstats.platform.payment.fixfin.command.make_vegapay_havale_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinPayfutureMakeFiatDepositCommand = (client: IRpcClient, payload: IFixFinPayfutureMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinPayfutureMakeFiatDepositCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.payfuture_make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.payfuture_make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinSistemnakitCreditCardMakeFiatDepositCommand = (client: IRpcClient, payload: IFixFinSistemnakitCreditCardMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinSistemnakitCreditCardMakeFiatDepositCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.sistemnakit_credit_card_make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.sistemnakit_credit_card_make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinSistemnakitHavaleMakeFiatDepositCommand = (client: IRpcClient, payload: IFixFinSistemnakitHavaleMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinSistemnakitHavaleMakeFiatDepositCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.sistemnakit_havale_make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.sistemnakit_havale_make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinTrHavaleEftDepositConfirmedByUserCommand = (client: IRpcClient, payload: IFixFinTrHavaleEftDepositConfirmedByUserCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinTrHavaleEftDepositConfirmedByUserCommand, null>(payload, `sumstats.platform.payment.fixfin.command.tr_havale_eft_deposit_confirmed_by_user`, `${payment_location}/sumstats.platform.payment.fixfin.command.tr_havale_eft_deposit_confirmed_by_user`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinTrHavaleEftDepositMethodSelectedCommand = (client: IRpcClient, payload: IFixFinTrHavaleEftDepositMethodSelectedCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinTrHavaleEftDepositMethodSelectedCommand, null>(payload, `sumstats.platform.payment.fixfin.command.tr_havale_eft_deposit_method_selected`, `${payment_location}/sumstats.platform.payment.fixfin.command.tr_havale_eft_deposit_method_selected`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinTurkpayMakeFiatDepositCommand = (client: IRpcClient, payload: IFixFinTurkpayMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinTurkpayMakeFiatDepositCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.turkpay_make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.turkpay_make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinUltrapayBanksCommand = (client: IRpcClient, payload: IFixFinUltrapayBanksCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinUltrapayBanksCommand, IFixFinBank[]>(payload, `sumstats.platform.payment.fixfin.command.ultrapay_banks`, `${payment_location}/sumstats.platform.payment.fixfin.command.ultrapay_banks`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinVegapayHavaleBanksCommand = (client: IRpcClient, payload: IFixFinVegapayHavaleBanksCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinVegapayHavaleBanksCommand, IFixFinBank[]>(payload, `sumstats.platform.payment.fixfin.command.vegapay_havale_banks`, `${payment_location}/sumstats.platform.payment.fixfin.command.vegapay_havale_banks`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinVegapayHavaleDepositMethodSelectedCommand = (client: IRpcClient, payload: IFixFinVegapayHavaleDepositMethodSelectedCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinVegapayHavaleDepositMethodSelectedCommand, null>(payload, `sumstats.platform.payment.fixfin.command.vegapay_havale_deposit_method_selected`, `${payment_location}/sumstats.platform.payment.fixfin.command.vegapay_havale_deposit_method_selected`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinVevoHavaleMakeFiatDepositCommand = (client: IRpcClient, payload: IFixFinVevoHavaleMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinVevoHavaleMakeFiatDepositCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.vevo_havale_make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.vevo_havale_make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinVevoParazulaMakeFiatDepositCommand = (client: IRpcClient, payload: IFixFinVevoParazulaMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinVevoParazulaMakeFiatDepositCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.vevo_parazula_make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.fixfin.command.vevo_parazula_make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_FixFinVevoParazulaSmsPhaseCommand = (client: IRpcClient, payload: IFixFinVevoParazulaSmsPhaseCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFixFinVevoParazulaSmsPhaseCommand, IFixFinMakeFiatDepositResponse>(payload, `sumstats.platform.payment.fixfin.command.vevo_parazula_sms_phase`, `${payment_location}/sumstats.platform.payment.fixfin.command.vevo_parazula_sms_phase`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_GetAllKolayPayDepositBankAccountsQuery = (client: IRpcClient, payload: IGetAllKolayPayDepositBankAccountsQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetAllKolayPayDepositBankAccountsQuery, IKolayPayBankAccountDto[]>(payload, `sumstats.platform.payment.kolaypay.query.get_all_deposit_bank_accounts`, `${payment_location}/sumstats.platform.payment.kolaypay.query.get_all_deposit_bank_accounts`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_GetMuchBetterPhoneNumberQuery = (client: IRpcClient, payload: IGetMuchBetterPhoneNumberQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetMuchBetterPhoneNumberQuery, string | null | undefined>(payload, `sumstats.platform.payment.muchbetter.query.phone_number`, `${payment_location}/sumstats.platform.payment.muchbetter.query.phone_number`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_KolayPayMakeHavaleDepositCommand = (client: IRpcClient, payload: IKolayPayMakeHavaleDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IKolayPayMakeHavaleDepositCommand, null>(payload, `sumstats.platform.payment.kolaypay.command.make_havale_deposit`, `${payment_location}/sumstats.platform.payment.kolaypay.command.make_havale_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_KolayPayMakeHavaleWithdrawalCommand = (client: IRpcClient, payload: IKolayPayMakeHavaleWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IKolayPayMakeHavaleWithdrawalCommand, null>(payload, `sumstats.platform.payment.kolaypay.command.make_havale_withdrawal`, `${payment_location}/sumstats.platform.payment.kolaypay.command.make_havale_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_KolayPayMakePaparaDepositCommand = (client: IRpcClient, payload: IKolayPayMakePaparaDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IKolayPayMakePaparaDepositCommand, string>(payload, `sumstats.platform.payment.kolaypay.command.make_papara_deposit`, `${payment_location}/sumstats.platform.payment.kolaypay.command.make_papara_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_LuxonPayMakeDepositCommand = (client: IRpcClient, payload: ILuxonPayMakeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ILuxonPayMakeDepositCommand, string>(payload, `sumstats.platform.payment.luxonpay.command.make_deposit`, `${payment_location}/sumstats.platform.payment.luxonpay.command.make_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_LuxonPayMakeWithdrawalCommand = (client: IRpcClient, payload: ILuxonPayMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ILuxonPayMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.luxonpay.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.luxonpay.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_MuchBetterFindLastUsedPhoneNumberQuery = (client: IRpcClient, payload: IMuchBetterFindLastUsedPhoneNumberQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IMuchBetterFindLastUsedPhoneNumberQuery, string | null | undefined>(payload, `sumstats.platform.payment.much_better.query.find_last_used_phone`, `${payment_location}/sumstats.platform.payment.much_better.query.find_last_used_phone`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_MuchBetterMakeDepositCommand = (client: IRpcClient, payload: IMuchBetterMakeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IMuchBetterMakeDepositCommand, TMuchBetterDepositStatus>(payload, `sumstats.platform.payment.much_better.command.make_deposit`, `${payment_location}/sumstats.platform.payment.much_better.command.make_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_MuchBetterMakeWithdrawalCommand = (client: IRpcClient, payload: IMuchBetterMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IMuchBetterMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.much_better.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.much_better.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_MuchBetterTrackingCodeQuery = (client: IRpcClient, payload: IMuchBetterTrackingCodeQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IMuchBetterTrackingCodeQuery, string | null | undefined>(payload, `sumstats.platform.payment.muchbetter.query.tracking_code`, `${payment_location}/sumstats.platform.payment.muchbetter.query.tracking_code`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_OneMakeWithdrawalCommand = (client: IRpcClient, payload: IOneMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IOneMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.one.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.one.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PayPortGetAvailablePaymentMethodsQuery = (client: IRpcClient, payload: IPayPortGetAvailablePaymentMethodsQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPayPortGetAvailablePaymentMethodsQuery, IPayPortPaymentMethod[]>(payload, `sumstats.platform.payment.payport.query.get_available_payment_methods`, `${payment_location}/sumstats.platform.payment.payport.query.get_available_payment_methods`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PayPortMakeDepositCommand = (client: IRpcClient, payload: IPayPortMakeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPayPortMakeDepositCommand, string>(payload, `sumstats.platform.payment.payport.command.make_deposit`, `${payment_location}/sumstats.platform.payment.payport.command.make_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PayPortMakeWithdrawalCommand = (client: IRpcClient, payload: IPayPortMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPayPortMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.payport.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.payport.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PayRetailersMakeDepositCommand = (client: IRpcClient, payload: IPayRetailersMakeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPayRetailersMakeDepositCommand, string>(payload, `sumstats.platform.payment.payretailers.command.make_deposit`, `${payment_location}/sumstats.platform.payment.payretailers.command.make_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PayRetailersMakeWithdrawalCommand = (client: IRpcClient, payload: IPayRetailersMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPayRetailersMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.payretailers.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.payretailers.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PaycentMakeFiatDepositCommand = (client: IRpcClient, payload: IPaycentMakeFiatDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPaycentMakeFiatDepositCommand, string>(payload, `sumstats.platform.payment.paycent.command.make_fiat_deposit`, `${payment_location}/sumstats.platform.payment.paycent.command.make_fiat_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PaymentClipMakeDepositCommand = (client: IRpcClient, payload: IPaymentClipMakeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPaymentClipMakeDepositCommand, IPaymentClipCheckoutPage>(payload, `sumstats.platform.payment.paymentclip.command.make_deposit`, `${payment_location}/sumstats.platform.payment.paymentclip.command.make_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PaymentClipMakeWithdrawalCommand = (client: IRpcClient, payload: IPaymentClipMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPaymentClipMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.paymentclip.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.paymentclip.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_SkrillMakeDepositCommand = (client: IRpcClient, payload: ISkrillMakeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ISkrillMakeDepositCommand, string>(payload, `sumstats.platform.payment.skrill.command.make_deposit`, `${payment_location}/sumstats.platform.payment.skrill.command.make_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_SkrillMakeWithdrawalCommand = (client: IRpcClient, payload: ISkrillMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ISkrillMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.skrill.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.skrill.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_SqalaMakeQrCodeDepositCommand = (client: IRpcClient, payload: ISqalaMakeQrCodeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ISqalaMakeQrCodeDepositCommand, string>(payload, `sumstats.platform.payment.sqala.command.make_qr_code_deposit`, `${payment_location}/sumstats.platform.payment.sqala.command.make_qr_code_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_SqalaMakeWithdrawalCommand = (client: IRpcClient, payload: ISqalaMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ISqalaMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.sqala.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.sqala.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_VpagMakeDepositCommand = (client: IRpcClient, payload: IVpagMakeDepositCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IVpagMakeDepositCommand, string>(payload, `sumstats.platform.payment.vpag.command.make_deposit`, `${payment_location}/sumstats.platform.payment.vpag.command.make_deposit`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_VpagMakeWithdrawalCommand = (client: IRpcClient, payload: IVpagMakeWithdrawalCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IVpagMakeWithdrawalCommand, null>(payload, `sumstats.platform.payment.vpag.command.make_withdrawal`, `${payment_location}/sumstats.platform.payment.vpag.command.make_withdrawal`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_PayRetailersForcePayoutNotificationsCommand = (client: IRpcClient, payload: IPayRetailersForcePayoutNotificationsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPayRetailersForcePayoutNotificationsCommand, null>(payload, `sumstats.platform.payment.payretailers.command.force_payout_notifications`, `${payment_location}/sumstats.platform.payment.payretailers.command.force_payout_notifications`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_PayRetailersForceTransactionNotificationsCommand = (client: IRpcClient, payload: IPayRetailersForceTransactionNotificationsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPayRetailersForceTransactionNotificationsCommand, null>(payload, `sumstats.platform.payment.payretailers.command.force_transaction_notifications`, `${payment_location}/sumstats.platform.payment.payretailers.command.force_transaction_notifications`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_SkrillCheckScheduledTransfersCommand = (client: IRpcClient, payload: ISkrillCheckScheduledTransfersCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ISkrillCheckScheduledTransfersCommand, null>(payload, `sumstats.platform.payment.skrill.command.check_scheduled_transfers`, `${payment_location}/sumstats.platform.payment.skrill.command.check_scheduled_transfers`, metadata, settings);
