import type { TSharedKey } from "@sb/translates/shared/SharedTKeys";
import {
  shared_scopeName_unknown,
  shared_scopeName_half,
  shared_scopeName_full_event,
  shared_scopeName_normal_time,
  shared_scopeName_period,
  shared_scopeName_over_times,
  shared_scopeName_over_time,
  shared_scopeName_penalties,
  shared_scopeName_penalty,
  shared_scopeName_quarter,
  shared_scopeName_set,
  shared_scopeName_game,
  shared_scopeName_frame,
  shared_scopeName_round,
  shared_scopeName_inning,
  shared_scopeName_sudden_death,
  shared_scopeName_kicking_competition,
  shared_scopeName_half_time,
  shared_scopeName_half_time_overtime,
  shared_scopeName_end_break,
  shared_scopeName_set_break,
  shared_scopeName_time_out,
  shared_scopeName_technical_time_out,
  shared_scopeName_medical_time_out,
  shared_scopeName_quarter_break,
  shared_scopeName_overtime_break,
  shared_scopeName_intermission,
  shared_scopeName_pause,
  shared_scopeName_interval,
  shared_scopeName_lunch_break,
  shared_scopeName_tea_break,
  shared_scopeName_break,
  shared_scopeName_rest,
  shared_scopeName_change_ends,
  shared_scopeName_map,
  shared_scopeName_extra_inning,
} from "@sb/translates/shared/SharedTKeys";
import { EScopeType } from "../EScopeType";

/**
 * ‚ö†Ô∏è GENERATED CODE - DO NOT MODIFY BY HAND
 *
 * üî®Ô∏è GENERATED BY kotlin/tools/code-generator-common/src/main/kotlin/com/sumstats/codegenerator/common/generator/typescript/TypescriptMapGenerator.kt
 * üî®Ô∏è SOURCE CODE: com.sumstats.codegenerator.model.source.ScopeTypeSource
 */
export const scopeNameTKeys: Record<EScopeType, TSharedKey> = {
  [EScopeType.unknown]: shared_scopeName_unknown,
  [EScopeType.half]: shared_scopeName_half,
  [EScopeType.full_event]: shared_scopeName_full_event,
  [EScopeType.normal_time]: shared_scopeName_normal_time,
  [EScopeType.period]: shared_scopeName_period,
  [EScopeType.over_times]: shared_scopeName_over_times,
  [EScopeType.over_time]: shared_scopeName_over_time,
  [EScopeType.penalties]: shared_scopeName_penalties,
  [EScopeType.penalty]: shared_scopeName_penalty,
  [EScopeType.quarter]: shared_scopeName_quarter,
  [EScopeType.set]: shared_scopeName_set,
  [EScopeType.game]: shared_scopeName_game,
  [EScopeType.frame]: shared_scopeName_frame,
  [EScopeType.round]: shared_scopeName_round,
  [EScopeType.inning]: shared_scopeName_inning,
  [EScopeType.sudden_death]: shared_scopeName_sudden_death,
  [EScopeType.kicking_competition]: shared_scopeName_kicking_competition,
  [EScopeType.half_time]: shared_scopeName_half_time,
  [EScopeType.half_time_overtime]: shared_scopeName_half_time_overtime,
  [EScopeType.end_break]: shared_scopeName_end_break,
  [EScopeType.set_break]: shared_scopeName_set_break,
  [EScopeType.time_out]: shared_scopeName_time_out,
  [EScopeType.technical_time_out]: shared_scopeName_technical_time_out,
  [EScopeType.medical_time_out]: shared_scopeName_medical_time_out,
  [EScopeType.quarter_break]: shared_scopeName_quarter_break,
  [EScopeType.overtime_break]: shared_scopeName_overtime_break,
  [EScopeType.intermission]: shared_scopeName_intermission,
  [EScopeType.pause]: shared_scopeName_pause,
  [EScopeType.interval]: shared_scopeName_interval,
  [EScopeType.lunch_break]: shared_scopeName_lunch_break,
  [EScopeType.tea_break]: shared_scopeName_tea_break,
  [EScopeType.break]: shared_scopeName_break,
  [EScopeType.rest]: shared_scopeName_rest,
  [EScopeType.change_ends]: shared_scopeName_change_ends,
  [EScopeType.map]: shared_scopeName_map,
  [EScopeType.extra_inning]: shared_scopeName_extra_inning,
};
