/**
 * ⚠️ GENERATED CODE - DO NOT MODIFY BY HAND
 *
 * 🔨️ GENERATED BY kotlin/tools/code-generator-common/src/main/kotlin/com/sumstats/codegenerator/common/sdk/typescript/SDKTypescriptGenerator.kt
 */
import type { ICreateUserMessageCommand } from "../platform/usermessages/api/command/CreateUserMessageCommand"
import type { IDeleteUserMessagesCommand } from "../platform/usermessages/api/command/DeleteUserMessagesCommand"
import type { IEditUserMessageCommand } from "../platform/usermessages/api/command/EditUserMessageCommand"
import type { IGetAllInternalUserMessagesQuery } from "../platform/usermessages/api/query/GetAllInternalUserMessagesQuery"
import type { IGetAllUserMessagesForUserQuery } from "../platform/usermessages/api/query/GetAllUserMessagesForUserQuery"
import type { IGetInternalUserMessagesHistoryByIdsQuery } from "../platform/usermessages/api/query/GetInternalUserMessagesHistoryByIdsQuery"
import type { IGetNotSeenCountForUserQuery } from "../platform/usermessages/api/query/GetNotSeenCountForUserQuery"
import type { IGetNotSeenUserMessageByIdQuery } from "../platform/usermessages/api/query/GetNotSeenUserMessageByIdQuery"
import type { IGetUserMessageByIdQuery } from "../platform/usermessages/api/query/GetUserMessageByIdQuery"
import type { IInternalUserMessageDto } from "../platform/usermessages/api/dto/InternalUserMessageDto"
import type { IInternalUserMessageHistoryDto } from "../platform/usermessages/api/dto/InternalUserMessageHistoryDto"
import type { IMarkAsSeenCommand } from "../platform/usermessages/api/command/MarkAsSeenCommand"
import type { IPage } from "../graphqlbackend/cursor/Page"
import type { IUserMessageDto } from "../platform/usermessages/api/dto/UserMessageDto"
import { IRpcClient } from "@sb/network-bus/RpcClient";
import { IMetadata } from "@sb/network-bus/Model";
import { ISetting } from "@sb/network-bus/Model";
import { emptySettings } from "@sb/network-bus/Model";
import { user_messages_location } from "./ProxyLocations";

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d889b-b956-7075-9979-8321a542ee71(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_EditUserMessageCommand = (client: IRpcClient, payload: IEditUserMessageCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IEditUserMessageCommand, null>(payload, `sumstats.platform.usermessages.command.edit_user_message`, `${user_messages_location}/sumstats.platform.usermessages.command.edit_user_message`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d889b-b956-799a-b00b-79d18527cb68(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_CreateUserMessageCommand = (client: IRpcClient, payload: ICreateUserMessageCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICreateUserMessageCommand, null>(payload, `sumstats.platform.usermessages.command.create_user_message`, `${user_messages_location}/sumstats.platform.usermessages.command.create_user_message`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d889b-b956-7da3-926a-f7832f8ccdf9(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_DeleteUserMessagesCommand = (client: IRpcClient, payload: IDeleteUserMessagesCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IDeleteUserMessagesCommand, null>(payload, `sumstats.platform.usermessages.command.delete_user_messages`, `${user_messages_location}/sumstats.platform.usermessages.command.delete_user_messages`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d889f-41e5-70db-ab38-d32dc9a42ae2(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_GetAllInternalUserMessagesQuery = (client: IRpcClient, payload: IGetAllInternalUserMessagesQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetAllInternalUserMessagesQuery, IPage<IInternalUserMessageDto>>(payload, `sumstats.platform.usermessages.query.get_all_internal_user_messages`, `${user_messages_location}/sumstats.platform.usermessages.query.get_all_internal_user_messages`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d889f-41e5-70db-ab38-d32dc9a42ae2(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_GetInternalUserMessagesHistoryByIdsQuery = (client: IRpcClient, payload: IGetInternalUserMessagesHistoryByIdsQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetInternalUserMessagesHistoryByIdsQuery, { [key: string]: IInternalUserMessageHistoryDto }>(payload, `sumstats.platform.usermessages.query.Get_Internal_User_Messages_History_By_Ids`, `${user_messages_location}/sumstats.platform.usermessages.query.Get_Internal_User_Messages_History_By_Ids`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, AFFILIATE_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_GetAllUserMessagesForUserQuery = (client: IRpcClient, payload: IGetAllUserMessagesForUserQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetAllUserMessagesForUserQuery, IPage<IUserMessageDto>>(payload, `sumstats.platform.usermessages.query.get_all_user_messages_for_user`, `${user_messages_location}/sumstats.platform.usermessages.query.get_all_user_messages_for_user`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, AFFILIATE_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_GetNotSeenCountForUserQuery = (client: IRpcClient, payload: IGetNotSeenCountForUserQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetNotSeenCountForUserQuery, number>(payload, `sumstats.platform.usermessages.query.get_not_seen_count_for_user`, `${user_messages_location}/sumstats.platform.usermessages.query.get_not_seen_count_for_user`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, AFFILIATE_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_GetNotSeenUserMessageByIdQuery = (client: IRpcClient, payload: IGetNotSeenUserMessageByIdQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetNotSeenUserMessageByIdQuery, IUserMessageDto>(payload, `sumstats.platform.usermessages.query.get_not_seen_user_message_by_id`, `${user_messages_location}/sumstats.platform.usermessages.query.get_not_seen_user_message_by_id`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, AFFILIATE_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_GetUserMessageByIdQuery = (client: IRpcClient, payload: IGetUserMessageByIdQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetUserMessageByIdQuery, IUserMessageDto>(payload, `sumstats.platform.usermessages.query.get_user_message_by_id`, `${user_messages_location}/sumstats.platform.usermessages.query.get_user_message_by_id`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, AFFILIATE_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_MarkAsSeenCommand = (client: IRpcClient, payload: IMarkAsSeenCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IMarkAsSeenCommand, null>(payload, `sumstats.platform.usermessages.command.mark_as_seen`, `${user_messages_location}/sumstats.platform.usermessages.command.mark_as_seen`, metadata, settings);
