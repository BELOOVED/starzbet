/**
 * ⚠️ GENERATED CODE - DO NOT MODIFY BY HAND
 *
 * 🔨️ GENERATED BY kotlin/tools/code-generator-common/src/main/kotlin/com/sumstats/codegenerator/common/sdk/typescript/SDKTypescriptGenerator.kt
 */
import type { IBetPlacedResponse } from "../sportsbook/placebet/api/domain/bet/dto/BetPlacedResponse"
import type { ICancelBetByAffiliateCommand } from "../sportsbook/placebet/api/domain/bet/command/CancelBetByAffiliateCommand"
import type { ICancelBetCommand } from "../sportsbook/placebet/api/domain/bet/command/CancelBetCommand"
import type { ICancelBetRequestCommand } from "../sportsbook/placebet/api/domain/bet/command/CancelBetRequestCommand"
import type { ICancelBoostForBetCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/betboost/CancelBoostForBetCommand"
import type { IChangeOddsBoostEnablingCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/ChangeOddsBoostEnablingCommand"
import type { IChangeOddsBoostPriorityCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/ChangeOddsBoostPriorityCommand"
import type { IComputeBoostForBetCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/betboost/ComputeBoostForBetCommand"
import type { ICreateBoostForBetCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/betboost/CreateBoostForBetCommand"
import type { ICreateOddsBoostCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/CreateOddsBoostCommand"
import type { ICreateOddsBoostWithOutcomesCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/accumulator/CreateOddsBoostWithOutcomesCommand"
import type { IDeleteBetRequestCommand } from "../sportsbook/placebet/api/domain/bet/command/DeleteBetRequestCommand"
import type { IEditBetCommand } from "../sportsbook/placebet/api/domain/bet/command/EditBetCommand"
import type { IEditBoostForBetCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/betboost/EditBoostForBetCommand"
import type { IGetBetStatesQuery } from "../sportsbook/placebet/api/domain/bet/query/GetBetStatesQuery"
import type { IGetPlayerTotalPayoutPerEventQuery } from "../sportsbook/placebet/api/domain/betcontribution/GetPlayerTotalPayoutPerEventQuery"
import type { IGetPlayerTotalPayoutPerOutrightQuery } from "../sportsbook/placebet/api/domain/betcontribution/GetPlayerTotalPayoutPerOutrightQuery"
import type { IGetPlayerTotalPayoutQuery } from "../sportsbook/placebet/api/domain/betcontribution/GetPlayerTotalPayoutQuery"
import type { IGetPlayerTotalStakePerEventQuery } from "../sportsbook/placebet/api/domain/betcontribution/GetPlayerTotalStakePerEventQuery"
import type { IGetPlayerTotalStakePerOutrightQuery } from "../sportsbook/placebet/api/domain/betcontribution/GetPlayerTotalStakePerOutrightQuery"
import type { IMoney } from "@sb/utils/Money"
import type { IPerformCashOutCommand } from "../sportsbook/placebet/api/domain/bet/command/PerformCashOutCommand"
import type { IPhpBetStateDto } from "../sportsbook/placebet/api/domain/bet/dto/PhpBetStateDto"
import type { IPlaceBetBatchCommand } from "../sportsbook/placebet/api/domain/bet/command/PlaceBetBatchCommand"
import type { IRemoveBoostForBetByBetIdCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/betboost/RemoveBoostForBetByBetIdCommand"
import type { IRemoveOddsBoostCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/RemoveOddsBoostCommand"
import type { IResettleAllBetsCommand } from "../sportsbook/placebet/api/domain/bet/command/ResettleAllBetsCommand"
import type { ISettleBetPickCommand } from "../sportsbook/placebet/api/domain/bet/command/SettleBetPickCommand"
import type { ISettleBetsByBetIdsCommand } from "../sportsbook/placebet/api/domain/bet/command/SettleBetsByBetIdsCommand"
import type { ISettleBetsByMarketsCommand } from "../sportsbook/placebet/api/domain/bet/command/SettleBetsByMarketsCommand"
import type { ISettleBetsCommand } from "../sportsbook/placebet/api/domain/bet/command/SettleBetsCommand"
import type { IUnfreezeBetCommand } from "../sportsbook/placebet/api/domain/bet/command/UnfreezeBetCommand"
import type { IUpdateOddsBoostCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/UpdateOddsBoostCommand"
import type { IUpdateOddsBoostWithOutcomesCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/accumulator/UpdateOddsBoostWithOutcomesCommand"
import type { IValidateOddsBoostNameAlreadyExistsCommand } from "../sportsbook/placebet/api/domain/oddsboost/command/ValidateOddsBoostNameAlreadyExistsCommand"
import { IRpcClient } from "@sb/network-bus/RpcClient";
import { IMetadata } from "@sb/network-bus/Model";
import { ISetting } from "@sb/network-bus/Model";
import { emptySettings } from "@sb/network-bus/Model";
import { placebet_location } from "./ProxyLocations";

/**
 * The message requires one of the following roles: ANON_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_GetBetStatesQuery = (client: IRpcClient, payload: IGetBetStatesQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetBetStatesQuery, IPhpBetStateDto[]>(payload, `sumstats.sportsbook.bet.command.get_bet_states`, `${placebet_location}/sumstats.sportsbook.bet.command.get_bet_states`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d8891-2d90-76f3-ba72-b1d68f55bbdc(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_SettleBetPickCommand = (client: IRpcClient, payload: ISettleBetPickCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ISettleBetPickCommand, null>(payload, `sumstats.sportsbook.placebet.command.settle_bet_pick`, `${placebet_location}/sumstats.sportsbook.placebet.command.settle_bet_pick`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d8893-686e-7101-bd7d-3e5d8fe2d869(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_DeleteBetRequestCommand = (client: IRpcClient, payload: IDeleteBetRequestCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IDeleteBetRequestCommand, null>(payload, `sumstats.sportsbook.placebet.delete_bet_request`, `${placebet_location}/sumstats.sportsbook.placebet.delete_bet_request`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d8895-3f44-7097-8908-8aa3e4be3e6f(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_CreateOddsBoostCommand = (client: IRpcClient, payload: ICreateOddsBoostCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICreateOddsBoostCommand, string>(payload, `sumstats.odds_boost.create_odds_boost`, `${placebet_location}/sumstats.odds_boost.create_odds_boost`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d8895-3f44-7caa-ada7-c222c949c56f(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_UpdateOddsBoostCommand = (client: IRpcClient, payload: IUpdateOddsBoostCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IUpdateOddsBoostCommand, null>(payload, `sumstats.odds_boost.update_odds_boost`, `${placebet_location}/sumstats.odds_boost.update_odds_boost`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d8896-5f92-72bc-bbb3-dc43242c4e9f(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_ChangeOddsBoostEnablingCommand = (client: IRpcClient, payload: IChangeOddsBoostEnablingCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IChangeOddsBoostEnablingCommand, null>(payload, `sumstats.odds_boost.change_odds_boost_enabling`, `${placebet_location}/sumstats.odds_boost.change_odds_boost_enabling`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d8896-5f92-7af9-bec0-ccb820c43142(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_RemoveOddsBoostCommand = (client: IRpcClient, payload: IRemoveOddsBoostCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IRemoveOddsBoostCommand, null>(payload, `sumstats.odds_boost.remove_odds_boost_by_id`, `${placebet_location}/sumstats.odds_boost.remove_odds_boost_by_id`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_ChangeOddsBoostPriorityCommand = (client: IRpcClient, payload: IChangeOddsBoostPriorityCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IChangeOddsBoostPriorityCommand, null>(payload, `sumstats.odds_boost.change_odds_boost_priority`, `${placebet_location}/sumstats.odds_boost.change_odds_boost_priority`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_CreateOddsBoostWithOutcomesCommand = (client: IRpcClient, payload: ICreateOddsBoostWithOutcomesCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICreateOddsBoostWithOutcomesCommand, string>(payload, `sumstats.odds_boost.create_odds_boost_with_outcomes`, `${placebet_location}/sumstats.odds_boost.create_odds_boost_with_outcomes`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_SettleBetsByMarketsCommand = (client: IRpcClient, payload: ISettleBetsByMarketsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ISettleBetsByMarketsCommand, null>(payload, `sumstats.sportsbook.placebet.command.settle_bets_by_markets`, `${placebet_location}/sumstats.sportsbook.placebet.command.settle_bets_by_markets`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_UpdateOddsBoostWithOutcomesCommand = (client: IRpcClient, payload: IUpdateOddsBoostWithOutcomesCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IUpdateOddsBoostWithOutcomesCommand, null>(payload, `sumstats.odds_boost.update_odds_boost_with_outcomes`, `${placebet_location}/sumstats.odds_boost.update_odds_boost_with_outcomes`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_ValidateOddsBoostNameAlreadyExistsCommand = (client: IRpcClient, payload: IValidateOddsBoostNameAlreadyExistsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IValidateOddsBoostNameAlreadyExistsCommand, null>(payload, `sumstats.sportsbook.placebet.command.validate_odds_boost_name_already_exists`, `${placebet_location}/sumstats.sportsbook.placebet.command.validate_odds_boost_name_already_exists`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE, SERVICE
 * The message requires the following acl: '018d8891-2d90-7c2a-9b3c-08ad7be7a3f9(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_ResettleAllBetsCommand = (client: IRpcClient, payload: IResettleAllBetsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IResettleAllBetsCommand, null>(payload, `sumstats.sportsbook.bet.command.resettle_all_bets`, `${placebet_location}/sumstats.sportsbook.bet.command.resettle_all_bets`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE, SERVICE
 * The message requires the following acl: '018d8891-2d90-7c2a-9b3c-08ad7be7a3f9(default),018d8817-f6d5-7105-86df-10e7eb3379a2(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_CancelBetCommand = (client: IRpcClient, payload: ICancelBetCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICancelBetCommand, null>(payload, `sumstats.sportsbook.bet.command.cancel_bet`, `${placebet_location}/sumstats.sportsbook.bet.command.cancel_bet`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE, SERVICE
 * The message requires the following acl: '018d8893-686e-7101-bd7d-3e5d8fe2d869(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_UnfreezeBetCommand = (client: IRpcClient, payload: IUnfreezeBetCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IUnfreezeBetCommand, IBetPlacedResponse[]>(payload, `sumstats.sportsbook.bet.command.place_bet.unfreeze_bet`, `${placebet_location}/sumstats.sportsbook.bet.command.place_bet.unfreeze_bet`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_EditBetCommand = (client: IRpcClient, payload: IEditBetCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IEditBetCommand, null>(payload, `sumstats.sportsbook.bet.command.edit_bet.edit_bet_kt`, `${placebet_location}/sumstats.sportsbook.bet.command.edit_bet.edit_bet_kt`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PerformCashOutCommand = (client: IRpcClient, payload: IPerformCashOutCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPerformCashOutCommand, null>(payload, `sumstats.sportsbook.bet.command.cash_out.perform_cash_out`, `${placebet_location}/sumstats.sportsbook.bet.command.cash_out.perform_cash_out`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * [!] The message doesn't have error mappings.
 */
export const call_PlaceBetBatchCommand = (client: IRpcClient, payload: IPlaceBetBatchCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IPlaceBetBatchCommand, IBetPlacedResponse[]>(payload, `sumstats.sportsbook.place_bet.command.place_bet`, `${placebet_location}/sumstats.sportsbook.place_bet.command.place_bet`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_CancelBetByAffiliateCommand = (client: IRpcClient, payload: ICancelBetByAffiliateCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICancelBetByAffiliateCommand, null>(payload, `sumstats.sportsbook.placebet.command.cancel_bet_by_affiliate`, `${placebet_location}/sumstats.sportsbook.placebet.command.cancel_bet_by_affiliate`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_ComputeBoostForBetCommand = (client: IRpcClient, payload: IComputeBoostForBetCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IComputeBoostForBetCommand, null>(payload, `sumstats.odds_boost.compute_boost_on_settle`, `${placebet_location}/sumstats.odds_boost.compute_boost_on_settle`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_CreateBoostForBetCommand = (client: IRpcClient, payload: ICreateBoostForBetCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICreateBoostForBetCommand, string>(payload, `sumstats.odds_boost.create_bet_odds_boost`, `${placebet_location}/sumstats.odds_boost.create_bet_odds_boost`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_EditBoostForBetCommand = (client: IRpcClient, payload: IEditBoostForBetCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IEditBoostForBetCommand, null>(payload, `sumstats.odds_boost.edit_bet_odds_boost`, `${placebet_location}/sumstats.odds_boost.edit_bet_odds_boost`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_GetPlayerTotalPayoutPerEventQuery = (client: IRpcClient, payload: IGetPlayerTotalPayoutPerEventQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetPlayerTotalPayoutPerEventQuery, { [key: string]: IMoney }>(payload, `sumstats.sportsbook.placebet.query.player_total_payout_per_event`, `${placebet_location}/sumstats.sportsbook.placebet.query.player_total_payout_per_event`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_GetPlayerTotalPayoutPerOutrightQuery = (client: IRpcClient, payload: IGetPlayerTotalPayoutPerOutrightQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetPlayerTotalPayoutPerOutrightQuery, { [key: string]: IMoney }>(payload, `sumstats.sportsbook.placebet.query.player_total_payout_per_outright`, `${placebet_location}/sumstats.sportsbook.placebet.query.player_total_payout_per_outright`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_GetPlayerTotalPayoutQuery = (client: IRpcClient, payload: IGetPlayerTotalPayoutQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetPlayerTotalPayoutQuery, { [key: string]: IMoney }>(payload, `sumstats.sportsbook.placebet.query.player_total_payout`, `${placebet_location}/sumstats.sportsbook.placebet.query.player_total_payout`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_GetPlayerTotalStakePerEventQuery = (client: IRpcClient, payload: IGetPlayerTotalStakePerEventQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetPlayerTotalStakePerEventQuery, { [key: string]: IMoney }>(payload, `sumstats.sportsbook.placebet.query.player_total_stake_per_event`, `${placebet_location}/sumstats.sportsbook.placebet.query.player_total_stake_per_event`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_GetPlayerTotalStakePerOutrightQuery = (client: IRpcClient, payload: IGetPlayerTotalStakePerOutrightQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetPlayerTotalStakePerOutrightQuery, { [key: string]: IMoney }>(payload, `sumstats.sportsbook.placebet.query.player_total_stake_per_outright`, `${placebet_location}/sumstats.sportsbook.placebet.query.player_total_stake_per_outright`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_SettleBetsByBetIdsCommand = (client: IRpcClient, payload: ISettleBetsByBetIdsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ISettleBetsByBetIdsCommand, null>(payload, `sumstats.sportsbook.placebet.command.settle_bets_by_bet_ids`, `${placebet_location}/sumstats.sportsbook.placebet.command.settle_bets_by_bet_ids`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE, OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_CancelBetRequestCommand = (client: IRpcClient, payload: ICancelBetRequestCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICancelBetRequestCommand, null>(payload, `sumstats.sportsbook.placebet.command.cancel_bet_request`, `${placebet_location}/sumstats.sportsbook.placebet.command.cancel_bet_request`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE, OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_CancelBoostForBetCommand = (client: IRpcClient, payload: ICancelBoostForBetCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICancelBoostForBetCommand, null>(payload, `sumstats.odds_boost.cancel_bet_odds_boost_for_bet_request`, `${placebet_location}/sumstats.odds_boost.cancel_bet_odds_boost_for_bet_request`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE, OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_RemoveBoostForBetByBetIdCommand = (client: IRpcClient, payload: IRemoveBoostForBetByBetIdCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IRemoveBoostForBetByBetIdCommand, null>(payload, `sumstats.odds_boost.remove_bet_odds_boost`, `${placebet_location}/sumstats.odds_boost.remove_bet_odds_boost`, metadata, settings);

/**
 * [!] The message does not require roles.
 * [!] The message doesn't have error mappings.
 */
export const call_SettleBetsCommand = (client: IRpcClient, payload: ISettleBetsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ISettleBetsCommand, null>(payload, `sumstats.sportsbook.bet.command.settle_bets`, `${placebet_location}/sumstats.sportsbook.bet.command.settle_bets`, metadata, settings);
