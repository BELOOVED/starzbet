/**
 * ⚠️ GENERATED CODE - DO NOT MODIFY BY HAND
 *
 * 🔨️ GENERATED BY kotlin/tools/code-generator-common/src/main/kotlin/com/sumstats/codegenerator/common/sdk/typescript/SDKTypescriptGenerator.kt
 */
import type { IAddSelfProtectionBagsByOperatorCommand } from "../platform/selfprotection/api/command/AddSelfProtectionBagsByOperatorCommand"
import type { IAddSelfProtectionBagsCommand } from "../platform/selfprotection/api/command/AddSelfProtectionBagsCommand"
import type { IErrorDto } from "../exception/ErrorDto"
import type { IGetSelfProtectionBagsByPlayerIdsQuery } from "../platform/selfprotection/api/query/GetSelfProtectionBagsByPlayerIdsQuery"
import type { IMatchSelfProtectionsCommand } from "../platform/selfprotection/api/command/MatchSelfProtectionsCommand"
import type { IRemoveAllSelfProtectionBagsCommand } from "../platform/selfprotection/api/command/RemoveAllSelfProtectionBagsCommand"
import type { SelfProtectionBagGqlDto } from "../platform/selfprotection/api/dto/SelfProtectionBagGqlDto"
import { IRpcClient } from "@sb/network-bus/RpcClient";
import { IMetadata } from "@sb/network-bus/Model";
import { ISetting } from "@sb/network-bus/Model";
import { emptySettings } from "@sb/network-bus/Model";
import { selfprotection_location } from "./ProxyLocations";

/**
 * The message requires one of the following roles: OPERATOR_ROLE, PLATFORM_PLAYER, SERVICE
 * The message requires the following acl: '018d8847-1e5e-7c3d-b5ea-157ea4b48d89(@STATIC/PLAYER),018d8853-33f2-7ce8-8b78-c33ebaeb232e(@STATIC/PLAYER),018d8853-33f2-7bd7-81c9-2346eb3a57e3(@STATIC/PLAYER),018d9c64-6dba-7839-a891-6ae1a9cefc67(@STATIC/PLAYER),018d9c75-4a9d-7e81-b857-45d321fd13b3(@STATIC/PLAYER),018d8899-da59-72ba-9aa3-7cd2691df33c(@STATIC/PLAYER),018d8890-dd2a-7ce2-9993-e1eaa2d018fc(@STATIC/PLAYER),018d8892-392c-7f9d-8363-11bbdf8126c2(@STATIC/PLAYER)'.
 * [!] The message doesn't have error mappings.
 */
export const call_GetSelfProtectionBagsByPlayerIdsQuery = (client: IRpcClient, payload: IGetSelfProtectionBagsByPlayerIdsQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetSelfProtectionBagsByPlayerIdsQuery, { [key: string]: SelfProtectionBagGqlDto[] }>(payload, `sumstats.platform.selfprotection.query.get_self_protection_bags_by_player_ids`, `${selfprotection_location}/sumstats.platform.selfprotection.query.get_self_protection_bags_by_player_ids`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE, SERVICE
 * The message requires the following acl: '018d8852-1eb7-7a71-a66c-64e88ec9d60b(default)'.
 * The message error mappings described in IAddSelfProtectionBagsByOperatorCommandErrorMapping
 */
export const call_AddSelfProtectionBagsByOperatorCommand = (client: IRpcClient, payload: IAddSelfProtectionBagsByOperatorCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAddSelfProtectionBagsByOperatorCommand, null>(payload, `sumstats.platform.selfprotection.command.add_selfprotection_bags_by_operator`, `${selfprotection_location}/sumstats.platform.selfprotection.command.add_selfprotection_bags_by_operator`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER
 * The message error mappings described in IAddSelfProtectionBagsCommandErrorMapping
 */
export const call_AddSelfProtectionBagsCommand = (client: IRpcClient, payload: IAddSelfProtectionBagsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IAddSelfProtectionBagsCommand, null>(payload, `sumstats.platform.selfprotection.command.add_selfprotection_bags`, `${selfprotection_location}/sumstats.platform.selfprotection.command.add_selfprotection_bags`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_MatchSelfProtectionsCommand = (client: IRpcClient, payload: IMatchSelfProtectionsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IMatchSelfProtectionsCommand, IErrorDto[]>(payload, `sumstats.platform.selfprotection.command.match_selfprotections`, `${selfprotection_location}/sumstats.platform.selfprotection.command.match_selfprotections`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_RemoveAllSelfProtectionBagsCommand = (client: IRpcClient, payload: IRemoveAllSelfProtectionBagsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IRemoveAllSelfProtectionBagsCommand, null>(payload, `sumstats.platform.selfprotection.command.remove_all_self_protection_bags`, `${selfprotection_location}/sumstats.platform.selfprotection.command.remove_all_self_protection_bags`, metadata, settings);
