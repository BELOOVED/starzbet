/**
 * ⚠️ GENERATED CODE - DO NOT MODIFY BY HAND
 *
 * 🔨️ GENERATED BY kotlin/tools/code-generator-common/src/main/kotlin/com/sumstats/codegenerator/common/sdk/typescript/SDKTypescriptGenerator.kt
 */
import type { IBlockIdToBlockHistoryDto } from "../common/cms/api/dto/BlockIdToBlockHistoryDto"
import type { IChangeCmsPagePriorityCommand } from "../common/cms/api/command/page/ChangeCmsPagePriorityCommand"
import type { ICmsBlockDto } from "../common/cms/api/dto/CmsBlockDto"
import type { ICmsBlockHistory } from "../common/cms/api/dto/CmsBlockHistory"
import type { ICmsPageDto } from "../common/cms/api/dto/CmsPageDto"
import type { ICmsPageMetaContent } from "../common/cms/api/dto/CmsPageMetaContent"
import type { ICmsVariableDto } from "../common/cms/api/dto/CmsVariableDto"
import type { ICreateCmsPageCommand } from "../common/cms/api/command/page/CreateCmsPageCommand"
import type { ICreateCmsVariableCommand } from "../common/cms/api/command/variables/CreateCmsVariableCommand"
import type { IDeleteCmsPageCommand } from "../common/cms/api/command/page/DeleteCmsPageCommand"
import type { IDeleteCmsVariableCommand } from "../common/cms/api/command/variables/DeleteCmsVariableCommand"
import type { IFindCmsBlocksContentQuery } from "../common/cms/api/query/FindCmsBlocksContentQuery"
import type { IFindCmsBlocksQuery } from "../common/cms/api/query/FindCmsBlocksQuery"
import type { IFindCmsPagesQuery } from "../common/cms/api/query/FindCmsPagesQuery"
import type { IFindCmsVariablesQuery } from "../common/cms/api/query/FindCmsVariablesQuery"
import type { IGetCmsBlockContentsByTypesQuery } from "../common/cms/api/query/GetCmsBlockContentsByTypesQuery"
import type { IGetCmsBlockVersionsQuery } from "../common/cms/api/query/GetCmsBlockVersionsQuery"
import type { IGetCmsPageMetaContentsQuery } from "../common/cms/api/query/GetCmsPageMetaContentsQuery"
import type { IPage } from "../graphqlbackend/cursor/Page"
import type { IReplaceBlocksContentsCommand } from "../common/cms/api/command/migration/ReplaceBlocksContentsCommand"
import type { IRestoreCmsPageCommand } from "../common/cms/api/command/page/RestoreCmsPageCommand"
import type { IRestoreCmsVariableCommand } from "../common/cms/api/command/variables/RestoreCmsVariableCommand"
import type { IUpdateCmsBlockCommand } from "../common/cms/api/command/block/UpdateCmsBlockCommand"
import type { IUpdateCmsPageCommand } from "../common/cms/api/command/page/UpdateCmsPageCommand"
import type { IUpdateCmsPageMetaContentCommand } from "../common/cms/api/command/page/UpdateCmsPageMetaContentCommand"
import type { IUpdateCmsVariableCommand } from "../common/cms/api/command/variables/UpdateCmsVariableCommand"
import { IRpcClient } from "@sb/network-bus/RpcClient";
import { IMetadata } from "@sb/network-bus/Model";
import { ISetting } from "@sb/network-bus/Model";
import { emptySettings } from "@sb/network-bus/Model";
import { cms_location } from "./ProxyLocations";

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message error mappings described in IChangeCmsPagePriorityCommandErrorMapping
 */
export const call_ChangeCmsPagePriorityCommand = (client: IRpcClient, postfix: string, payload: IChangeCmsPagePriorityCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IChangeCmsPagePriorityCommand, null>(payload, `sumstats.cms.command.change_cms_page_priority.${postfix}`, `${cms_location}/sumstats.cms.command.change_cms_page_priority.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message error mappings described in ICreateCmsPageCommandErrorMapping
 */
export const call_CreateCmsPageCommand = (client: IRpcClient, postfix: string, payload: ICreateCmsPageCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICreateCmsPageCommand, null>(payload, `sumstats.cms.command.create_cms_page.${postfix}`, `${cms_location}/sumstats.cms.command.create_cms_page.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message error mappings described in IDeleteCmsPageCommandErrorMapping
 */
export const call_DeleteCmsPageCommand = (client: IRpcClient, postfix: string, payload: IDeleteCmsPageCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IDeleteCmsPageCommand, null>(payload, `sumstats.cms.command.delete_cms_page.${postfix}`, `${cms_location}/sumstats.cms.command.delete_cms_page.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message error mappings described in IRestoreCmsPageCommandErrorMapping
 */
export const call_RestoreCmsPageCommand = (client: IRpcClient, postfix: string, payload: IRestoreCmsPageCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IRestoreCmsPageCommand, null>(payload, `sumstats.cms.command.restore_cms_page.${postfix}`, `${cms_location}/sumstats.cms.command.restore_cms_page.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message error mappings described in IUpdateCmsPageCommandErrorMapping
 */
export const call_UpdateCmsPageCommand = (client: IRpcClient, postfix: string, payload: IUpdateCmsPageCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IUpdateCmsPageCommand, null>(payload, `sumstats.cms.command.update_cms_page.${postfix}`, `${cms_location}/sumstats.cms.command.update_cms_page.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message error mappings described in IUpdateCmsPageMetaContentCommandErrorMapping
 */
export const call_UpdateCmsPageMetaContentCommand = (client: IRpcClient, postfix: string, payload: IUpdateCmsPageMetaContentCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IUpdateCmsPageMetaContentCommand, null>(payload, `sumstats.cms.command.update_cms_page_meta_content.${postfix}`, `${cms_location}/sumstats.cms.command.update_cms_page_meta_content.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * The message requires the following acl: '018d9c6e-81f7-7da5-bf81-cf0df0fb9558(default),018d8826-6c81-786c-af06-2e5519344d1a(default)'.
 * The message error mappings described in IUpdateCmsBlockCommandErrorMapping
 */
export const call_UpdateCmsBlockCommand = (client: IRpcClient, postfix: string, payload: IUpdateCmsBlockCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IUpdateCmsBlockCommand, null>(payload, `sumstats.cms.command.update_cms_block.${postfix}`, `${cms_location}/sumstats.cms.command.update_cms_block.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_CreateCmsVariableCommand = (client: IRpcClient, postfix: string, payload: ICreateCmsVariableCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<ICreateCmsVariableCommand, null>(payload, `sumstats.cms.command.create_cms_variable.${postfix}`, `${cms_location}/sumstats.cms.command.create_cms_variable.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_DeleteCmsVariableCommand = (client: IRpcClient, postfix: string, payload: IDeleteCmsVariableCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IDeleteCmsVariableCommand, null>(payload, `sumstats.cms.command.delete_cms_variable.${postfix}`, `${cms_location}/sumstats.cms.command.delete_cms_variable.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_RestoreCmsVariableCommand = (client: IRpcClient, postfix: string, payload: IRestoreCmsVariableCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IRestoreCmsVariableCommand, null>(payload, `sumstats.cms.command.restore_cms_variable.${postfix}`, `${cms_location}/sumstats.cms.command.restore_cms_variable.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_UpdateCmsVariableCommand = (client: IRpcClient, postfix: string, payload: IUpdateCmsVariableCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IUpdateCmsVariableCommand, null>(payload, `sumstats.cms.command.update_cms_variable.${postfix}`, `${cms_location}/sumstats.cms.command.update_cms_variable.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, OPERATOR_ROLE, SERVICE
 * The message requires the following acl: '018d9c63-5fce-7531-8121-0cc8aee5c79e(default),018d8826-6c81-7756-b7de-75f13fd0b901(default)'.
 * [!] The message doesn't have error mappings.
 */
export const call_FindCmsPagesQuery = (client: IRpcClient, postfix: string, payload: IFindCmsPagesQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFindCmsPagesQuery, IPage<ICmsPageDto>>(payload, `sumstats.cms.query.find_cms_pages.${postfix}`, `${cms_location}/sumstats.cms.query.find_cms_pages.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, OPERATOR_ROLE, SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_FindCmsBlocksQuery = (client: IRpcClient, postfix: string, payload: IFindCmsBlocksQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFindCmsBlocksQuery, IPage<ICmsBlockDto>>(payload, `sumstats.cms.query.find_cms_blocks.${postfix}`, `${cms_location}/sumstats.cms.query.find_cms_blocks.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, OPERATOR_ROLE, SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_FindCmsVariablesQuery = (client: IRpcClient, postfix: string, payload: IFindCmsVariablesQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFindCmsVariablesQuery, IPage<ICmsVariableDto>>(payload, `sumstats.cms.query.find_cms_variables.${postfix}`, `${cms_location}/sumstats.cms.query.find_cms_variables.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, SERVICE, OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_FindCmsBlocksContentQuery = (client: IRpcClient, postfix: string, payload: IFindCmsBlocksContentQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IFindCmsBlocksContentQuery, { [key: string]: ICmsBlockHistory }>(payload, `sumstats.cms.query.find_cms_blocks_content.${postfix}`, `${cms_location}/sumstats.cms.query.find_cms_blocks_content.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: PLATFORM_PLAYER, SERVICE, OPERATOR_ROLE
 * [!] The message doesn't have error mappings.
 */
export const call_GetCmsPageMetaContentsQuery = (client: IRpcClient, postfix: string, payload: IGetCmsPageMetaContentsQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetCmsPageMetaContentsQuery, { [key: string]: ICmsPageMetaContent }>(payload, `sumstats.cms.query.get_cms_page_meta_contents.${postfix}`, `${cms_location}/sumstats.cms.query.get_cms_page_meta_contents.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_GetCmsBlockContentsByTypesQuery = (client: IRpcClient, postfix: string, payload: IGetCmsBlockContentsByTypesQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetCmsBlockContentsByTypesQuery, { [key: string]: IBlockIdToBlockHistoryDto[] }>(payload, `sumstats.cms.query.get_cms_block_contents_by_types.${postfix}`, `${cms_location}/sumstats.cms.query.get_cms_block_contents_by_types.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_GetCmsBlockVersionsQuery = (client: IRpcClient, postfix: string, payload: IGetCmsBlockVersionsQuery, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IGetCmsBlockVersionsQuery, { [key: string]: number }>(payload, `sumstats.cms.query.get_cms_block_versions.${postfix}`, `${cms_location}/sumstats.cms.query.get_cms_block_versions.${postfix}`, metadata, settings);

/**
 * The message requires one of the following roles: SERVICE
 * [!] The message doesn't have error mappings.
 */
export const call_ReplaceBlocksContentsCommand = (client: IRpcClient, postfix: string, payload: IReplaceBlocksContentsCommand, metadata?: IMetadata, settings: ISetting = emptySettings) => client.call<IReplaceBlocksContentsCommand, null>(payload, `sumstats.cms.command.replace_blocks_contents.${postfix}`, `${cms_location}/sumstats.cms.command.replace_blocks_contents.${postfix}`, metadata, settings);
